-- јвтор јзарков ћаксим Ќиколаевич
-- ¬ерси€ 2021-01-18 v.1.3
-- задание интересно тем, что создает впечатление создание Ѕƒ с "огорода"
-- обычно думаешь, что сначал создаетс€ пользователь, затем все зависимости дл€ него, а на самом
-- деле сначала прогружаютс€ все зависимости, а только потом создаетс€ запись о пользователе.

-- ѕодключимс€ к Ѕƒ
\c attaches

-- »так, будет считать, что пользователь создал некую за€вку, по этому, все зависимости создает именно от записи
-- сначала записываем коммент к за€вке пользовател€
INSERT INTO
    comments (commentText)
VALUES
    ('ƒопустим здесь текст комментари€');

-- ну и допустим, что пользователь прикрутил какой-то файл
INSERT INTO
    attachs (nameFile)
VALUES
    ('simple.file');

-- теперь соберем за€вку в одно место. решил пол€ закоментарить
INSERT INTO
    item (name, comments_id, attaches_id)
VALUES
    ('кака€-то за€вка', 1, 1);

-- теперь создадим пользовател€ и прицепим к нему его "опус"
INSERT INTO
    t_user (name, item_id)
VALUES
    ('»ван »ванов', 1);

-- теперь укажим, кем €вл€етс€ данный пользователь
INSERT INTO
    role (name, user_id)
VALUES
    ('јдмин', 1);

-- ќбычно роли задаютс€ заранее, но € ввиду эти роли именно сейчас, чтобы было пон€тнее
INSERT INTO
    rules (name)
VALUES
    ('чтение'),
    ('запись');

--  теперь укаже, что у пользовател€ есть полный доуступ на чтение и на запись
INSERT INTO
    role_rules (role_id, rules_id)
VALUES
    (1, 1),
    (1, 2);

-- далее есть некоторые сомнени€ с правльной структурой таблицы. дело в том, что одинаковые категории
-- будут дублироватьс€, а так же может возникуть ситуаци€, когда к одной за€вке может быть прив€зано
-- несколько категорий...
INSERT INTO
    category (name, item_id)
VALUES
    ('перва€ категори€', 1);

-- “оже самое можно сказать и про состо€ние за€вки.
INSERT INTO
    state (stateItem, item_id)
VALUES
    ('выполн€етс€', 1);
